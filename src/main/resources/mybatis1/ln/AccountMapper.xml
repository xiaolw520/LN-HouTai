<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AccountMapper">
	
	<!--表名 -->
	<sql id="tableName">
		t_account
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		refid,	
		reftype,	
		nick_name,	
		gender,	
		crtime,	
		uptime,	
		isdel,	
		state,
		city,	
		province,	
		country,	
		avatar_url,	
		open_id,	
		union_id,	
		phone,	
		token,	
		accountid
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{refid},	
		#{reftype},	
		#{nick_name},	
		#{gender},	
		#{crtime},	
		#{uptime},	
		#{isdel},	
		#{state},
		#{city},	
		#{province},	
		#{country},	
		#{avatar_url},	
		#{open_id},	
		#{union_id},	
		#{phone},	
		#{token},	
		#{accountid}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>

	<!-- 新增-->
	<insert id="saveAccount" parameterType="account">
		insert into
		<include refid="tableName"></include>
		(
		<include refid="Field"></include>
		) values (
		<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			accountid = #{accountid}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			refid = #{refid},
			reftype = #{reftype},
			nick_name = #{nick_name},
			gender = #{gender},
			crtime = #{crtime},
			uptime = #{uptime},
			isdel = #{isdel},
			state = #{state},
			city = #{city},
			province = #{province},
			country = #{country},
			avatar_url = #{avatar_url},
			open_id = #{open_id},
			union_id = #{union_id},
			phone = #{phone},
			token = #{token},
		accountid = accountid
		where 
		accountid = #{accountid}
	</update>

	<!-- 修改 -->
	<update id="editToken" parameterType="pd">
		update
		<include refid="tableName"></include>
		set
			uptime = #{uptime},
			token = #{token}
		where
		accountid = #{accountid}
	</update>

	<!-- 通过ID获取数据 -->
	<select id="getAccountByTokenOrOpenid" parameterType="pd" resultType="account">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where 1=1
		<if test="token!= null"><!-- 关键词检索 -->
			and token = #{token}
		</if>
		<if test="open_id!= null"><!-- 关键词检索 -->
			and open_id = #{open_id}
		</if>

	</select>

	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from
		<include refid="tableName"></include>
		where
		accountid = #{accountid}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			accountid in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
    <!-- 软删除 -->
    <update id="softDelete" parameterType="pd">
        update
        <include refid="tableName"></include>
        set
        isdel = 1
        where
	accountid = #{accountid}
    </update>
    <!-- 批量软删除 -->
    <delete id="softDeleteAll" parameterType="String">
        update
        <include refid="tableName"></include>
        set
        isdel = 1
        where
	accountid in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
		#{item}
        </foreach>
    </delete>
</mapper>