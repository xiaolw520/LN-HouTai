<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProfessionMapper">
	
	<!--表名 -->
	<sql id="tableName">
		t_profession
	</sql>
	<!-- 字段 -->
	<sql id="Field">
		refid,	
		reftype,	
		name,	
		course,
		sort,
		crtime,	
		uptime,	
		isdel,	
		state,	
		credential,	
		work,	
		professionid
	</sql>
	<resultMap type="Profession" id="professionResultMap">
		<id column="professionid" property="professionid"/>
		<result column="p_refid" property="p_refid"/>
		<result column="p_reftype" property="p_reftype"/>
		<result column="p_name" property="p_name"/>
		<result column="course" property="course"/>
		<result column="credential" property="credential"/>
		<result column="work" property="work"/>
		<result column="p_sort" property="p_sort"/>
		<result column="p_uptime" property="p_uptime"/>
		<result column="p_crtime" property="p_crtime"/>
		<result column="p_isdel" property="p_isdel"/>
		<result column="p_state" property="p_state"/>
		<association property="dept" column="deptid" javaType="Dept">
			<id column="deptid" property="deptid"/>
			<result column="name" property="name"/>
		</association>
	</resultMap>
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{refid},	
		#{reftype},	
		#{name},	
		#{course},	
		#{sort},
		#{crtime},
		#{uptime},	
		#{isdel},	
		#{state},	
		#{credential},	
		#{work},	
		#{professionid}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
	<include refid="Field"></include>
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			professionid = #{professionid}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			refid = #{refid},
			name = #{name},
			course = #{course},
			uptime = #{uptime},
			sort = #{sort},
			credential = #{credential},
			work = #{work}
		where 
		professionid = #{professionid}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			professionid = #{professionid}
	</select>

	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		p.refid,
		p.reftype,
		p.name,
		p.course,
		p.sort,
		p.crtime,
		p.uptime,
		p.isdel,
		p.state,
		p.credential,
		p.work,
		p.professionid,
		d.name as d_name
		from
		<include refid="tableName"></include> p left join t_dept d on p.refid = d.deptid
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
			(
			<!--	根据需求自己加检索条件
                字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
                 or
                字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
            -->
			)
		</if>


	</select>

	<!--&lt;!&ndash; 列表 &ndash;&gt;
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''">&lt;!&ndash; 关键词检索 &ndash;&gt;
			and
				(
				&lt;!&ndash;	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				&ndash;&gt;
				)
		</if>
	</select>-->
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where refid=#{deptid} order by sort
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			professionid in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>